#summary Методология разработки ПО - RUP (группа 1)

=Методология разработки программного обеспечения Rational Unified Process=

<wiki:toc max_depth="2" />


== Понятие ==

*Rational Unified Process (RUP)* — методология разработки программного обеспечения, созданная компанией Rational Software.

== Принципы ==

В основе RUP лежат следующие основные принципы:
  * Ранняя идентификация и непрерывное (до окончания проекта) устранение основных рисков.
  * Концентрация на выполнении требований заказчиков к исполняемой программе (анализ и построение модели прецедентов).
  * Ожидание изменений в требованиях, проектных решениях и реализации в процессе разработки.
  * Компонентная архитектура, реализуемая и тестируемая на ранних стадиях проекта.
  * Постоянное обеспечение качества на всех этапах разработки проекта (продукта).
  * Работа над проектом в сплочённой команде, ключевая роль в которой принадлежит архитекторам.

==Жизненный цикл разработки==

RUP использует итеративную модель разработки. В конце каждой итерации (в идеале продолжающейся от 2 до 6 недель) проектная команда должна достичь запланированных на данную итерацию целей, создать или доработать проектные артефакты и получить промежуточную, но функциональную версию конечного продукта. Итеративная разработка позволяет быстро реагировать на меняющиеся требования, обнаруживать и устранять риски на ранних стадиях проекта, а также эффективно контролировать качество создаваемого продукта.

Полный жизненный цикл разработки продукта состоит из четырех фаз, каждая из которых включает в себя одну или несколько итераций:

http://www.dpgrup.ru/i/RUP-process.png

Графическое представление процесса разработки по RUP.

*1. Начало (Inception)*

На этом этапе:
  * Формируются видение и границы проекта.
  * Создается экономическое обоснование (business case).
  * Определяются основные требования, ограничения и ключевая функциональность продукта.
  * Создается базовая версия модели прецедентов.
  * Оцениваются риски.

При завершении начальной стадии оценивается достижение вехи целей жизненного цикла (англ. Lifecycle Objective Milestone), которое предполагает соглашение заинтересованных сторон о продолжении проекта.

*2. Проектирование (Elaboration)*

На этапе проектирования производится анализ предметной области и построение исполняемой архитектуры. Это включает в себя:
  * Документирование требований (включая детальное описание для большинства прецедентов).
  * Спроектированную, реализованную и оттестированную исполняемую архитектуру.
  * Обновленное экономическое обоснование и более точные оценки сроков и стоимости.
  * Сниженные основные риски.

Успешное выполнение фазы проектирования означает достижение вехи архитектуры жизненного цикла (англ. Lifecycle Architecture Milestone).

*3. Построение (Construction)*

Во время этой фазы происходит реализация большей части функциональности продукта. Фаза Построение завершается первым внешним релизом системы и вехой начальной функциональной готовности (Initial Operational Capability).

*4. Внедрение (Transition)*

Во время фазы Внедрение создается финальная версия продукта и передается от разработчика к заказчику. Это включает в себя программу бета-тестирования, обучение пользователей, а также определение качества продукта. В случае, если качество не соответствует ожиданиям пользователей или критериям, установленным в фазе Начало, фаза Внедрение повторяется снова. Выполнение всех целей означает достижение вехи готового продукта (Product Release) и завершение полного цикла разработки.

----

Методологии разработки ПО взяты из этого [http://www.dpgrup.ru/methodologies.htm источника].

Еще одна страничка из нашего проекта [Kanban о Канбане]

fkjgf [http://ru.wikipedia.org/wiki/Гибкая_методология_разработки kfgfj].