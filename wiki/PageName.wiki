#summary 3-я страница "Экстремальное программирование" информационного проекта "Гибкая методология разработки" (группа 3)

= Общее представление =

*Экстремальное программирование* - одна из гибких методологий разработки программного обеспечения. Авторы методологии — Кент Бек, Уорд Каннингем, Мартин Фаулер и другие.

*Основные приёмы XP*
Двенадцать основных приёмов экстремального программирования могут быть объединены в четыре группы:
   # Короткий цикл обратной связи
      * Разработка через тестирование (Test driven development)
      * Игра в планирование (Planning game)
      * Заказчик всегда рядом (Whole team, Onsite customer)
      * Парное программирование (Pair programming)
   # Непрерывный, а не пакетный процесс
      * Непрерывная интеграция (Continuous Integration)
      * Рефакторинг (Design Improvement, Refactor)
      * Частые небольшие релизы (Small Releases)
   # Понимание, разделяемое всеми
      * Простота (Simple design)
      * Метафора системы (System metaphor)
      * Коллективное владение кодом (Collective code ownership) или выбранными шаблонами проектирования (Collective patterns ownership)
      * Стандарт кодирования (Coding standard or Coding conventions)
   # Социальная защищенность программиста (Programmer welfare):
      * 40-часовая рабочая неделя (Sustainable pace, Forty hour week)

= Тестирование =

В XP особое внимание уделяется двум разновидностям тестирования:
   # тестирование модулей (unit testing);
   # приёмочное тестирование (acceptance testing).

Разработчик не может быть уверен в правильности написанного им кода до тех пор, пока не сработают абсолютно все тесты модулей разрабатываемой им системы. Тесты модулей позволяют разработчикам убедиться в том, что их код работает корректно. Они также помогают другим разработчикам понять, зачем нужен тот или иной фрагмент кода и как он функционирует. Тесты модулей также позволяют разработчику без каких-либо опасений выполнять рефакторинг (refactoring).

Приемочные тесты позволяют убедиться в том, что система действительно обладает заявленными возможностями. Кроме того, приёмочные тесты позволяют проверить корректность функционирования разрабатываемого продукта.

Для XP более приоритетным является подход, называемый TDD (Test Driven Development) — сначала пишется тест, который не проходит, затем пишется код, чтобы тест прошел, а уже после делается рефакторинг кода.

Подробнее об экстремальном программировании можно узнать 
[http://ru.wikipedia.org/wiki/%D0%AD%D0%BA%D1%81%D1%82%D1%80%D0%B5%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5 здесь].